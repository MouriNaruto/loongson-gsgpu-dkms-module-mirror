PACKAGE_NAME="gsgpu"
PACKAGE_VERSION="1.0.0"
AUTOINSTALL="yes"
REMAKE_INITRD="yes"
PRE_BUILD="pre-build.sh $kernelver"
POST_INSTALL="post-install.sh $kernelver"

# not work with RHEL DKMS
#MODULES_CONF[0]="blacklist gsgpu"

BUILT_MODULE_NAME[0]="gsgpu"
BUILT_MODULE_LOCATION[0]="gsgpu/gpu"
DEST_MODULE_LOCATION[0]="/updates"

#BUILT_MODULE_NAME[1]="gsttm"
#BUILT_MODULE_LOCATION[1]="ttm"
#DEST_MODULE_LOCATION[1]="/updates"

#BUILT_MODULE_NAME[2]="gschash"
#BUILT_MODULE_LOCATION[2]="gsgpu/lib"
#DEST_MODULE_LOCATION[2]="/updates"

#BUILT_MODULE_NAME[3]="gs-sched"
#BUILT_MODULE_LOCATION[3]="scheduler"
#DEST_MODULE_LOCATION[3]="/updates"

# Find out how many CPU cores can be use if we pass appropriate -j option to make.
# DKMS could use all cores on multicore systems to build the kernel module.
num_cpu_cores()
{
	if [ -x /usr/bin/nproc ]; then
		nproc
	else
		echo "1"
	fi
}

MAKE[0]="make -j$(num_cpu_cores) kdir=$kernel_source_dir -C $kernel_source_dir M=$dkms_tree/$module/$module_version/build"
POST_REMOVE="post-remove.sh $kernelver"
